package br.com.fiap.service;

import br.com.fiap.dao.TarefaDao;
import br.com.fiap.dto.TarefaDto;
import br.com.fiap.models.Tarefa;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;

import java.util.List;
import java.util.stream.Collectors;

@ApplicationScoped
public class TarefaService {

    @Inject
    TarefaDao tarefaDao;

    public List<TarefaDto> listarTodas() {
        List<Tarefa> tarefas = tarefaDao.listar();
        return tarefas.stream().map(this::toDto).collect(Collectors.toList());
    }

    public TarefaDto buscarPorId(Long id) {
        Tarefa tarefa = tarefaDao.buscarPorId(id);
        if(tarefa != null)
            return toDto(tarefa);
        return null;
    }

    public void criar(TarefaDto tarefaDto) {
        Tarefa tarefa = toEntity(tarefaDto);
        tarefaDao.criar(tarefa);
    }

    public void atualizar(Long id, TarefaDto tarefaDto) {
        Tarefa tarefa = toEntity(tarefaDto);
        tarefa.setId(id);
        tarefaDao.atualizar(tarefa);
    }

    public void deletar(Long id) {
        tarefaDao.deletar(id);
    }

    private TarefaDto toDto(Tarefa tarefa) {
        return new TarefaDto(
                tarefa.getId(),
                tarefa.getTitulo(),
                tarefa.getDescricao(),
                tarefa.getDataLimite(),
                tarefa.getStatus(),
                tarefa.getResponsavel()
        );
    }

    private Tarefa toEntity(TarefaDto tarefaDto) {
        return new Tarefa(
                null, // ID is generated by the database
                tarefaDto.getTitulo(),
                tarefaDto.getDescricao(),
                tarefaDto.getDataLimite(),
                tarefaDto.getStatus(),
                tarefaDto.getResponsavel()
        );
    }
}
